@use '../../style/include' as *;

@include responsive using($vars) {
  input[type='checkbox']#theme-switcher {
    @include on-large-screen {
      position: fixed;
      top: map_get($vars, $normal-margin);
      right: map_get($vars, $normal-margin);
    }

    @include on-small-screen {
      position: relative;
      margin-top: map_get($vars, $normal-margin);
    }

    &::-ms-check {
      display: none;
    }

    background-color: map_get($vars, $accent-color);
    cursor: pointer;
    -webkit-appearance: none;
    -moz-appearance: none;

    $size: map_get($vars, $icon-size);
    width: 2 * $size;
    height: $size;
    $icon-size: 0.7 * $size;
    $margin: ($size - $icon-size) / 2;

    border-radius: 1000px;
    box-shadow: inset 0 0 10px 2px rgba(0, 0, 0, 0.175),
      inset 0 0 1px rgba(0, 0, 0, 0.4);

    &:before {
      // moon + sun
      @include square($icon-size);
    }

    &:after {
      // sun blocking moon
      @include square($icon-size * 0.8);
    }

    &:before,
    &:after {
      content: '';
      position: absolute;
      display: block;
      border-radius: 1000px;

      top: 50%;
      transform: translateY(-50%);

      transition: transform map_get($vars, $transition-time),
        background-color map_get($vars, $transition-time);
    }

    &:not(:checked) {
      &:before {
        transform: translateY(-50%) translateX(3 * $margin + $icon-size);

        animation: shine 3s linear alternate infinite;
        background-color: map_get($vars, $sun-color);
        @keyframes shine {
          from {
            filter: brightness(1.01);
            box-shadow: 0 0 4px 2px map_get($vars, $sun-color);
          }

          to {
            filter: brightness(1.1);
            box-shadow: 0 0 15px 2px map_get($vars, $sun-color);
          }
        }
      }

      &:after {
        background-color: transparent;
        transform: translateY(-50%) translateX($size * 2 - $icon-size);
      }
    }

    &:checked {
      &:before {
        background-color: map_get($vars, $normal-text-color);
        transform: translateY(-50%) translateX($margin);
      }

      &:after {
        background-color: map_get($vars, $accent-color);
        transform: translateY(-50%) translateX($margin + $icon-size * 0.33);
      }
    }
  }
}
